syntax = "v1"

import (
	"doc/user.api"
	"doc/chat.api"
	"doc/uploadfile.api"
	"doc/config.api"
	"doc/tool.api"
	"doc/common.api"
)

info(
	title: "chat service api"
	desc: "chat service api desc"
	author: "type author here"
	email: "type email here"
	version: "v1"
)

@server(
	middleware: AccessLog // 路由中间件声明
	prefix: api
)

service chat-api {
	@handler UserRegisterHandler
	post /user/register (UserRegisterReq) returns (UserRegisterReply)
	
	@handler UserLoginHandler
	post /user/login (UserLoginReq) returns (UserLoginReply)
	
	@handler UploadArticleHandler
	post /upload/article (UploadArticleHandlerReq) returns (UploadArticleHandlerReply)
	
	@handler DeleteCollectionHandler
	post /delete/collection (DeleteCollectionHandlerReq) returns (DeleteCollectionHandlerReply)
	
	@handler SetPromptHandler
	post /prompt/set (SetPromptReq) returns (SetPromptReply)
	
	@handler ListPromptHandler
	post /prompt/list (ListPromptReq) returns (ListPromptReply)
	
	@handler DownloadChatHistoryHandler
	get /download/chat/history (DownloadChatHistoryReq) returns (DownloadChatHistoryReply)
	
	@handler SyncWechatUserHandler
	get /tool/sync-wechat-user (SyncWechatUserReq) returns (SyncWechatUserReply)
	
	@handler FindApplicationConfigHandler
	post /config/find-get-application-config (FindApplicationConfigRequest) returns (ApplicationConfig)
	
	@handler GetApplicationConfigHandler
	post /config/get-application-config (GetApplicationConfigListRequest) returns (GetApplicationListPageResult)
	
	@handler CreateApplicationConfigHandler
	post /config/create-application-config (ApplicationConfig) returns (Response)
	
	@handler UpdateApplicationConfigHandler
	post /config/update-application-config (ApplicationConfig) returns (Response)
	
	@handler DeleteApplicationConfigHandler
	post /config/delete-application-config (FindApplicationConfigRequest) returns (Response)
	
	@handler DeleteApplicationConfigByIdsHandler
	post /config/delete-application-config-by-ids (IdsRequest) returns (Response)
	
	@handler FindCustomerConfigHandler
	post /config/find-get-customer-config (FindCustomerConfigRequest) returns (CustomerConfig)
	
	@handler GetCustomerConfigHandler
	post /config/get-customer-config (GetCustomerConfigListRequest) returns (GetCustomerListPageResult)
	
	@handler CreateCustomerConfigHandler
	post /config/create-customer-config (CustomerConfig) returns (Response)
	
	@handler UpdateCustomerConfigHandler
	post /config/update-customer-config (CustomerConfig) returns (Response)
	
	@handler DeleteCustomerConfigHandler
	post /config/delete-customer-config (FindCustomerConfigRequest) returns (Response)
	
	@handler DeleteCustomerConfigByIdsHandler
	post /config/delete-customer-config-by-ids (IdsRequest) returns (Response)
	
	@handler GetChatListHandler
	post /msg/get-chat (GetChatListRequest) returns (GetChatListPageResult)
	
}

// 需要鉴权的服务
@server(
	middleware: AccessLog // 路由中间件声明
	prefix: api
	jwt: Auth // jwt中间件声明
)
service chat-api {
	@handler ChatHandler
	post /msg/push (ChatReq) returns (ChatReply)
	
	@handler CustomerChatHandler
	post /msg/customer/push (CustomerChatReq) returns (CustomerChatReply)
	
	@handler ChatRecordHandler
	post /msg/export (ChatHistoryExportReq) returns (ChatHistoryExportReply)
	
	@handler GetLastChatRecordHandler
	post /msg/last-chat-info (GetLastChatInfoRequest) returns (GetLastChatInfoReply)
	
	@handler AutoChatHandler
	post /msg/generate-chat (DoGenerateActiveChatContentRequest) returns (DoGenerateActiveChatContentReply)
	
}