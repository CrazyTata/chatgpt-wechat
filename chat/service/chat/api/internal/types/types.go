// Code generated by goctl. DO NOT EDIT.
package types

type UserRegisterReq struct {
	Email    string `json:"email,optional" validate:"required,email" label:"邮箱"`
	Name     string `json:"name,optional" validate:"required,max=50" label:"用户名"`
	Password string `json:"password,optional" validate:"required" label:"密码"`
}

type UserRegisterReply struct {
	Message string `json:"message"`
}

type UserLoginReq struct {
	Email    string `json:"email,optional" validate:"required,email" label:"邮箱"`
	Password string `json:"password,optional" validate:"required" label:"密码"`
}

type UserLoginReply struct {
	Token string `json:"token"`
}

type ChatReq struct {
	Channel string `json:"channel,optional" validate:"required,oneof=wecom openai" label:"渠道"`
	MSG     string `json:"msg,optional" validate:"required,max=500" label:"消息"`
	UserID  string `json:"user_id,optional" validate:"required,max=500" label:"用户标识"`
	AgentID int64  `json:"agent_id,optional" validate:"required" label:"应用标识"`
}

type ChatReply struct {
	Message string `json:"message"`
}

type CustomerChatReq struct {
	MsgID      string `json:"msg_id"`
	Msg        string `json:"msg"`
	CustomerID string `json:"customer_id"`
	OpenKfID   string `json:"open_kf_id"`
}

type CustomerChatReply struct {
	Message string `json:"message"`
}

type ChatHistoryExportReq struct {
	UserNickname string `json:"user_nickname"`
	KfName       string `json:"kf_name"`
	ChatType     int32  `json:"chat_type"`
	StartTime    string `json:"start_time,omitempty"`
	EndTime      string `json:"end_time,omitempty"`
}

type ChatHistoryExportReply struct {
	File string `json:"file"`
}

type GetLastChatInfoRequest struct {
	UserNickname string `json:"user_nickname"`
	KfName       string `json:"kf_name"`
	ChatType     int32  `json:"chat_type"`
}

type GetLastChatInfoReply struct {
	ReqContent  string `json:"req_content"`
	ResContent  string `json:"res_content"`
	CreatedTime string `json:"created_time"`
}

type DoGenerateActiveChatContentRequest struct {
	UserNickname   string `json:"user_nickname"`
	KfName         string `json:"kf_name"`
	Prompt         string `json:"prompt"`
	ContextMessage string `json:"context_message"`
	ChatType       int32  `json:"chat_type"`
}

type DoGenerateActiveChatContentReply struct {
	Message string `json:"message"`
}

type UploadArticleHandlerReq struct {
}

type UploadArticleHandlerReply struct {
	Message string `json:"message"`
}

type DeleteCollectionHandlerReq struct {
	CollectionName string `json:"collection_name"`
}

type DeleteCollectionHandlerReply struct {
	Message string `json:"message"`
}

type DownloadChatHistoryReply struct {
}

type DownloadChatHistoryReq struct {
	File string `form:"file"`
}

type SetPromptReq struct {
	KfId   string `json:"kf_id"`
	Prompt string `json:"prompt"`
}

type SetPromptReply struct {
	Message string `json:"message"`
}

type ListPromptReq struct {
}

type ListPromptReplyData struct {
	Id     int64  `json:"id"`
	KfId   string `json:"kf_id"`
	Prompt string `json:"prompt"`
}

type ListPromptReply struct {
	List []ListPromptReplyData `json:"list"`
}

type GetApplicationConfigListRequest struct {
	Page           int    `json:"page"`      // 页码
	PageSize       int    `json:"page_size"` // 每页大小
	StartCreatedAt string `json:"start_created_at,omitempty"`
	EndCreatedAt   string `json:"end_created_at,omitempty"`
	AgentName      string `json:"agent_name,omitempty"`
	Model          string `json:"model,omitempty"`
}

type FindApplicationConfigRequest struct {
	Id int64 `json:"id"`
}

type IdsRequest struct {
	Ids []int64 `json:"id"`
}

type ApplicationConfig struct {
	Id               int64   `json:"id,omitempty"`
	AgentId          int     `json:"agent_id,omitempty"`
	AgentSecret      string  `json:"agent_secret,omitempty"`
	AgentName        string  `json:"agent_name,omitempty"`
	Model            string  `json:"model,omitempty"`
	PostModel        string  `json:"post_model,omitempty"`
	BasePrompt       string  `json:"base_prompt,omitempty"`
	Welcome          string  `json:"welcome,omitempty"`
	GroupEnable      bool    `json:"group_enable,omitempty"`
	EmbeddingEnable  bool    `json:"embedding_enable,omitempty"`
	EmbeddingMode    string  `json:"embedding_mode,omitempty"`
	Score            float64 `json:"score,omitempty"`
	TopK             int     `json:"top_k,omitempty"`
	ClearContextTime int     `json:"clear_context_time,omitempty"`
	GroupName        string  `json:"group_name,omitempty"`
	GroupChatId      string  `json:"group_chat_id,omitempty"`
	CreatedAt        string  `json:"created_at,omitempty"` // 创建时间
	UpdatedAt        string  `json:"updated_at,omitempty"` // 更新时间
}

type GetCustomerConfigListRequest struct {
	Page           int    `json:"page"`      // 页码
	PageSize       int    `json:"page_size"` // 每页大小
	StartCreatedAt string `json:"start_created_at,omitempty"`
	EndCreatedAt   string `json:"end_created_at,omitempty"`
	CustomerName   string `json:"customer_name,omitempty"`
	Model          string `json:"model,omitempty"`
}

type FindCustomerConfigRequest struct {
	Id int64 `json:"id"`
}

type CustomerConfig struct {
	Id               int64   `json:"id,omitempty,omitempty"`
	KfId             string  `json:"kf_id,omitempty"` // 客服ID
	KfName           string  `json:"kf_name,omitempty"`
	Prompt           string  `json:"prompt,omitempty"`
	PostModel        string  `json:"post_model,omitempty"`         // 发送请求的model
	EmbeddingEnable  bool    `json:"embedding_enable,omitempty"`   // 是否启用embedding
	EmbeddingMode    string  `json:"embedding_mode,omitempty"`     // embedding的搜索模式
	Score            float64 `json:"score,omitempty"`              // 分数
	TopK             int64   `json:"top_k,omitempty"`              // topK
	ClearContextTime int64   `json:"clear_context_time,omitempty"` // 需要清理上下文的时间，按分配置，默认0不清理
	CreatedAt        string  `json:"created_at,omitempty"`         // 创建时间
	UpdatedAt        string  `json:"updated_at,omitempty"`         // 更新时间
}

type GetChatListRequest struct {
	Page           int    `json:"page"`      // 页码
	PageSize       int    `json:"page_size"` // 每页大小
	StartCreatedAt string `json:"start_created_at,omitempty"`
	EndCreatedAt   string `json:"end_created_at,omitempty"`
	Agent          string `json:"agent,omitempty"`
	User           string `json:"user,omitempty"`
	Customer       string `json:"customer,omitempty"`
}

type GetChatListPageResult struct {
	List     []ChatResponse `json:"list"`
	Total    int64          `json:"total"`
	Page     int            `json:"page"`
	PageSize int            `json:"pageSize"`
}

type ChatResponse struct {
	Id         int64  `json:"id"`
	User       string `json:"user"`        // weCom用户标识/customer用户标识
	MessageId  string `json:"message_id"`  // message_id customer消息唯一ID
	OpenKfId   string `json:"open_kf_id"`  // 客服标识
	AgentId    string `json:"agent_id"`    // 应用ID
	ReqContent string `json:"req_content"` // 用户发送内容
	ResContent string `json:"res_content"` // openai响应内容
	CreatedAt  string `json:"created_at"`  // 创建时间
	UpdatedAt  string `json:"updated_at"`  // 更新时间
}

type GetCustomerListPageResult struct {
	List     []CustomerConfig `json:"list"`
	Total    int64            `json:"total"`
	Page     int              `json:"page"`
	PageSize int              `json:"pageSize"`
}

type GetApplicationListPageResult struct {
	List     []ApplicationConfig `json:"list"`
	Total    int64               `json:"total"`
	Page     int                 `json:"page"`
	PageSize int                 `json:"pageSize"`
}

type SyncWechatUserReq struct {
}

type SyncWechatUserReply struct {
	Message string `json:"message"`
}

type Response struct {
	Message string `json:"message"`
}

type PageResult struct {
	List     interface{} `json:"list"`
	Total    int64       `json:"total"`
	Page     int         `json:"page"`
	PageSize int         `json:"pageSize"`
}

type IdRequest struct {
	Id string `json:"id"`
}

type PageInfo struct {
	Page     int    `json:"page" form:"page"`         // 页码
	PageSize int    `json:"pageSize" form:"pageSize"` // 每页大小
	Keyword  string `json:"keyword" form:"keyword"`   //关键字
}
